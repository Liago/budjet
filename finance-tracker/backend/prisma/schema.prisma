// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                 String            @id @default(uuid())
  email              String            @unique
  password           String
  firstName          String
  lastName           String
  transactions       Transaction[]
  categories         Category[]
  tags               Tag[]
  recurrentPayments  RecurrentPayment[]
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
}

model Category {
  id                 String              @id @default(uuid())
  name               String
  icon               String?
  color              String?
  isDefault          Boolean             @default(false)
  budget             Decimal?            // Budget mensile per la categoria
  user               User                @relation(fields: [userId], references: [id])
  userId             String
  transactions       Transaction[]
  recurrentPayments  RecurrentPayment[]
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt

  @@unique([name, userId])
}

model Transaction {
  id          String    @id @default(uuid())
  amount      Decimal
  description String?
  date        DateTime
  type        String    // "INCOME" or "EXPENSE"
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  String
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  tags        Tag[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Tag {
  id            String        @id @default(uuid())
  name          String
  user          User          @relation(fields: [userId], references: [id])
  userId        String
  transactions  Transaction[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@unique([name, userId])
}

model RecurrentPayment {
  id           String   @id @default(uuid())
  name         String
  amount       Decimal
  description  String?
  interval     String   // "daily", "weekly", "monthly", "yearly"
  dayOfMonth   Int?
  dayOfWeek    Int?
  startDate    DateTime
  endDate      DateTime?
  nextPaymentDate DateTime
  isActive     Boolean  @default(true)
  category     Category @relation(fields: [categoryId], references: [id])
  categoryId   String
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
} 